/**
 * 
 */
package pa07;
import java.io.*;
import java.util.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;

import javax.swing.*;
import javax.swing.event.*;
import javax.swing.border.*;
import java.net.*;
import javax.imageio.*;

/**
 * @author Kristen Smith (ksmith22@brandeis.edu)
 *
 */
public class SuperRankerGui extends JPanel implements ActionListener {
	private SuperRanker sr; //the super-ranker object
	private Predictor p;
	private User u;
	
	private int uAge;//user's age
	private JTextField ageText;//for age text entry area
	
	private String uGender;//user's selected gender
	private String[] genders;
	private JComboBox genderList;//List for gender JComboBox
	
	public String uOccupation = "";//user's selected occupation
	private String[] jobs;
	private JComboBox jobList;
	
	private String uZip; //user's zipcode		
	private JTextField zipcodeText;//for zipcode text entry area
	
	
	private JFrame frame;
	private JLabel picture;//for the image displayed in the window	
	
	private JComboBox movieList;//list of movies for movie dropdown menu
	private String[] allMovies;	//movies to put into movie dropdown list
	private JButton getRating;//button to press to get the predicted rating
	private int showRating;//temporary variable for the getRating button

	//private JTextField movieText = new JTextField("Please Select the Movie you Would like a predicted rating for: ");
	private int movieIndex;
	private Movie m;//the movie the user has selected from the movielist dropdown menu
	private double predictedRating;//predicted rating returned by the SuperRanker (sr)
	
	private boolean hasSelected;//whether all fields have been entered/selected
	
	public SuperRankerGui(){
		super(new BorderLayout());	
		frame = new JFrame("Kristen's Movie Wizard!");
		getRating = new JButton("Make a prediction for me!");
		ageText = new JTextField();
		genders = new String[3];
		genders[0] = " ";
		genders[1] = "F";
		genders[2] = "M";
		
		zipcodeText  = new JTextField();
		picture = new JLabel();
		
		u = new User(); // default user (modified User.java)
		p = new Predictor();
		
		//Set up combo boxes, JPanels, and add them to the main frame ("frame")
		setupDropMenus();	
		
	}
	
	/**
	 * For testing purposes
	 */
	public void printSelectedInfo(){
		System.out.println("entered age= "+ageText.getText());
		System.out.println("selected gender="+ (String)genderList.getSelectedItem());
		System.out.println("selected occupation= " + jobList.getSelectedItem());
		System.out.println("entered zip code = " + zipcodeText.getText());
		System.out.println("Selected movie = " + movieList.getSelectedItem());
		
		System.out.println("uAge = "+uAge);
		System.out.println("uGender="+uGender);
		System.out.println("uOccupation="+uOccupation);
		System.out.println("uZip="+uZip);
		System.out.println("m="+m);
	}
	
	/**
	 * For testing purposes
	 * @return
	 */
	public boolean testWhetherUserHasMadeSelections(){
		boolean ageSelected = ageText.getText() != null;
		boolean genderSelected= genderList.getSelectedItem() != "";
		boolean jobSelected = jobList.getSelectedItem() != null;
		boolean zipEntered = zipcodeText.getText() != null;
		boolean movieSelected = movieList.getSelectedItem() != ML100K.movies.get(4);
		
		return (ageSelected && genderSelected && jobSelected && zipEntered && movieSelected);
	}
	
	/**
	 * Returns the predicted rating generated by the SuperRanker
	 * @param sr
	 * @return
	 */
	public double getPredictedRating(SuperRanker sr){
		if(m != null && hasSelected == true){
			return (sr.rateMovie(m));
		}
		return 1;
	}
	
	public String[] readOccupations(){
		String[] occupation = new String[21];
		int count = 1;
		try{
			Scanner s = new Scanner(new File("Occupations.txt"));
			occupation[0] = s.nextLine();
			while(s.hasNext() && count < occupation.length){
				occupation[count] = s.nextLine();
				count++;
			}			
		} catch (Exception e){
			System.out.println("Error in reading occupations.");
		}		
		return occupation;
	}
	
	/**
	 * Makes the current frame visible (based of ComboBoxDemo.java from Oracle)
	 */
	public static void makeVisible(){
		JFrame frame = new JFrame("Kristen's Movie SuperRanker!");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setBackground(Color.magenta);
        frame.isResizable();

        //Create and set up the content pane.
        JComponent newContentPane = new SuperRankerGui();
        newContentPane.setOpaque(true); //content panes must be opaque
        frame.setContentPane(newContentPane);
        
        //addKeyListener(this);

        //Display the window.
        frame.pack();
        frame.setVisible(true);
        
	}
	
	
	
	/**
	 * Sets up the ComboBox items in the main frame, adds them to panels,
	 * and then adds them to the main frame. Also adds the BufferedImage to 
	 * the frame.
	 */
	public void setupDropMenus(){
		
		//add actionlistener to events from the age textfield
		ageText.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e2){
				String age = ageText.getText();
				int age2 = Integer.parseInt(age);
				setUAge(age2);			
				System.out.println("Age registered: " + uAge);
				u.setAge(age2);
				//sr = new SuperRanker(age2, uGender, uOccupation, uZip);
			}
		});
		
		//Create Gender dropdown menu
		
		genderList = new JComboBox(genders);
		genderList.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				String gend = (String)genderList.getSelectedItem();
				setUGender(gend);
				u.setGender(gend);
				System.out.println("Gender entered: " + gend);
			}
		});
		
		//Create occupations dropdown menu
		jobs = readOccupations();
		jobList = new JComboBox(jobs);
		jobList.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				String jb = (String)jobList.getSelectedItem();
				setUOccupation(jb);
				u.setOccupation(jb);
				System.out.println("Job selected: " + jb);
			}
		});

		//Create zipcode entry field
		zipcodeText.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e3){
				String zip = zipcodeText.getText();
				setUZipcode(zip);
				System.out.println("Zipcode entered: " + uZip);
				//sr = new SuperRanker(age(), uGender, uOccupation, uZip);
			}
		});
		
		//Create movies dropdown list
		allMovies = constructMovieTitles();
		movieList = new JComboBox(allMovies);
		movieList.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				movieIndex = movieList.getSelectedIndex();
				m = ML100K.movies.get(movieIndex);//gets the selected movie--will have same index
				p.setMovie(m);
				System.out.println("Movie selected: "+m);				
				predictedRating = p.predict(u, p.getMovie());;//get a predicted rating from the SuperRanker
				
				getRating.addMouseListener(new MouseListener(){
					public void mousePressed(MouseEvent e2){ }
					public void mouseReleased(MouseEvent e3){ }
					public void mouseExited(MouseEvent e4){ }
					public void mouseEntered(MouseEvent e5){ }
					public void mouseClicked(MouseEvent e){
						showRating = JOptionPane.showConfirmDialog(frame, "Predicted Rating: " + predictedRating);
						//Close whole program after the predicted rating is displayed because original data does not reset
						//automatically.
						System.exit(0);
					}
				});
			}
		});
		
		
		
		//Add image to the frame
		try{
			BufferedImage myPicture = ImageIO.read(new File("images/movie_icon.jpg"));
			picture.setIcon(new ImageIcon(myPicture));
		} catch (Exception e){
			System.out.println("Error with buffered image.");
		}

		//ADD LAYOUTS
		JPanel jp = new JPanel(new GridLayout(6, 2));				
		jp.add(new JLabel("Enter Your Age: "), BorderLayout.PAGE_START);
		jp.add(ageText);
		jp.add(new JLabel("Please select your gender: "));
		jp.add(genderList);
		jp.add(new JLabel("Please select your occupation: "));
		jp.add(jobList);
		jp.add(new JLabel("Enter Your Zipcode: "));
		jp.add(zipcodeText);
		jp.add(new JLabel("Please select the movie you would like a predicted rating for: "));
		jp.add(movieList);
		jp.add(getRating);
		
		
		//Create panel wiht the buffered image on it.
		JPanel jp2 = new JPanel();
		jp2.add(picture);
		
		//add all panels to the main frame
		add(jp, BorderLayout.NORTH);
		add(jp2, BorderLayout.SOUTH);
        setBorder(BorderFactory.createEmptyBorder(3, 3, 50, 50));				
	}
	
	public String[] constructMovieTitles(){
		Movie[] theMovies1 = ML100K.getMovies();
		String[] result = new String[ML100K.getNumMovies()];
		
		for(int i=0; i < result.length; i++){
			String title = theMovies1[i].getTitle();
			result[i] = title;
		}
		
		return result;
	}
	
	
	/**
	 * Listens for JComboBox events--So the class implements
	 * ActionPerformed (ActionListener interface)
	 */
	public void actionPerformed(ActionEvent e){
		//??
		
		
	}
	
	public void setMovie(Movie m){
		this.m = m;
	}
	
	public Movie getMovie(){
		if(movieList.getSelectedItem() != null){
			return this.m;
		} else {
			//If user has not selected a movie to get a rating for,
			//just go with a default movie--movie # 5
			return(ML100K.movies.get(4));
		}
	}
	
	public int age(){
		return uAge;
	}
	
	public void setUAge(int a){
		this.uAge = a;
	}
	
	public String getUGender(){
		return uGender;
	}
	
	public void setUGender(String g){
		uGender = g;
	}
	
	public void setUOccupation(String s){
		uOccupation += s;
	}
	
	public String getUOccupation(){
		return uOccupation;
	}
	
	public void setUZipcode(String zip){
		this.uZip = zip;
	}
	
	public static void collectUInfo(JFrame f){
		
	}
	
	public String zipcode(){
		return uZip;
	}
	
	public JFrame getFrame(){
		return frame;
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		SuperRankerGui g = new SuperRankerGui();
		javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                makeVisible();
            }
        });
	}

}
